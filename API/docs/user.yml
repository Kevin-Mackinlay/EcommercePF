User:
  description: Manages user functionalities including CRUD operations and statistical data gathering.
  schema:
    UserSchema:
      description: Schema representing a user.
      fields:
        username:
          type: String
          required: true
          unique: true
          description: Username for the user, must be unique.
        email:
          type: String
          required: true
          unique: true
          description: Email address for the user, must be unique.
        password:
          type: String
          required: true
          description: Encrypted password for the user.
        isAdmin:
          type: Boolean
          default: false
          description: Flag indicating whether the user has administrative privileges.
      timestamps: true

  controllers:
    UserController:
      updateUser:
        description: Update a user's details.
        parameters:
          id:
            type: String
            required: true
            description: Unique identifier of the user to update.
          body:
            type: Object
            required: true
            description: Body content containing the user's new details. If password is included, it will be encrypted.
        responses:
          200:
            description: User updated successfully.
          500:
            description: Internal server error.
      deleteUser:
        description: Delete a user.
        parameters:
          id:
            type: String
            required: true
            description: Unique identifier of the user to delete.
        responses:
          200:
            description: User deleted successfully.
          500:
            description: Internal server error.
      getUser:
        description: Retrieve a single user by ID.
        parameters:
          id:
            type: String
            required: true
            description: Unique identifier of the user to retrieve.
        responses:
          200:
            description: User retrieved successfully, password excluded.
          500:
            description: Internal server error.
      getAllUsers:
        description: Retrieve all users, optionally filtered by newness.
        parameters:
          new:
            type: Boolean
            description: If set to true, returns only the newest users.
        responses:
          200:
            description: Users retrieved successfully.
          500:
            description: Internal server error.
      getUserStats:
        description: Retrieve statistical data of user registrations over the last year by month.
        responses:
          200:
            description: User registration statistics retrieved successfully.
          500:
            description: Internal server error.

  routes:
    UserRoutes:
      basePath: /api/users
      endpoints:
        PUT /:id:
          description: Update a specific user.
          authRequired: verifyTokenAndAuthorization
        DELETE /:id:
          description: Delete a specific user.
          authRequired: verifyTokenAndAuthorization
        GET /find/:id:
          description: Get a specific user.
          authRequired: verifyTokenAndAdmin
        GET /:
          description: Get all users.
          authRequired: verifyTokenAndAdmin
        GET /stats:
          description: Get user registration statistics.
          authRequired: verifyTokenAndAdmin
